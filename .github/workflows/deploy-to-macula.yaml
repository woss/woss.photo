name: deploy-to-macula
on:
  push:
    branches:
      - main
jobs:
  build:
    name: build and deploy
    runs-on: ubuntu-latest
    env:
      NODE_NO_WARNINGS: 1
      BROWSERSLIST_IGNORE_OLD_DATA: 1
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Download ipfsCli
        run: |
          echo "Downloading anagolay ipfs CLI which works with the ipfsAuthProxy"
          curl https://ipfs.macula.link/ipfs/bafybeig634knkl57gqgkmh3fti6zxisfcd47swetf5lastcx2waboa4a4a  > /usr/local/bin/ipfsCli
          chmod +x /usr/local/bin/ipfsCli

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Pnpm Install
        run: pnpm install --frozen-lockfile

      - name: Build App
        env:
          VITE_SENTRY_RELEASE_VERSION: production-${{github.sha}}
          NODE_ENV: production
        run: pnpm build

      - name: Upload Source Maps to Sentry
        env:
          SENTRY_LOG_LEVEL: debug
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: https://sentry.kelp.digital
          SENTRY_ORG: kelp
          SENTRY_RELEASE_VERSION: production-${{github.sha}}
          SENTRY_PROJECT: woss-photo
          NODE_ENV: production
        run: pnpm sentry-upload

      - name: Upload woss-photo to Macula
        env:
          AN_IPFS_API_URL: ${{ secrets.AN_IPFS_API_URL }}
          AN_IPFS_API_KEY: ${{ secrets.AN_IPFS_API_KEY }}
        run: ipfsCli add --onlyCid ./build > woss_photo_cid

      - name: Create build artifact
        uses: actions/upload-artifact@v4
        with:
          name: woss_photo_cid
          path: woss_photo_cid
          retention-days: 1

      - name: Deployed URL
        run: echo "https://$(cat woss_photo_cid).ipfs.macula.link"

      - name: Publish to Macula Hosting
        uses: actions/github-script@v7
        with:
          script: |
            const { readFile } = require('node:fs/promises');
            const { resolve } = require('node:path');
            const filePath = resolve('./woss_photo_cid')
            const contents = await readFile(filePath, { encoding: 'utf8' });
            const cid = contents.toString();
            const l = cid.length;

            const firstChars = cid.substring(0,7);
            const lastChars = cid.substring(l-7,l);
            const full = `${firstChars}...${lastChars}`

            let hostingUrl = '';

            hostingUrl = 'https://api.macula.link/hosting';

            let pkgSlug = 'woss-photo';

            const response = await fetch(hostingUrl, {
              method: 'post',
            body: JSON.stringify({slug:pkgSlug, ipfsCid: cid.trim()}),
              headers: {'Content-Type': 'application/json','api-key':'${{ secrets.ACCEPT_HOSTING_API_KEY }}'}
            });
            const data = await response.json();
            console.log('data', data)
